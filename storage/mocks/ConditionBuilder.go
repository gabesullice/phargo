package mocks

import mock "github.com/stretchr/testify/mock"
import storage "github.com/gabesullice/phargo/storage"

// ConditionBuilder is an autogenerated mock type for the ConditionBuilder type
type ConditionBuilder struct {
	mock.Mock
}

// Condition provides a mock function with given fields: property, value, operator, negate
func (_m *ConditionBuilder) Condition(property string, value interface{}, operator storage.Operator, negate ...bool) storage.ConditionBuilder {
	ret := _m.Called(property, value, operator, negate)

	var r0 storage.ConditionBuilder
	if rf, ok := ret.Get(0).(func(string, interface{}, storage.Operator, ...bool) storage.ConditionBuilder); ok {
		r0 = rf(property, value, operator, negate...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(storage.ConditionBuilder)
		}
	}

	return r0
}

// ConditionGroup provides a mock function with given fields: conjunction
func (_m *ConditionBuilder) ConditionGroup(conjunction storage.Conjunction) storage.ConditionBuilder {
	ret := _m.Called(conjunction)

	var r0 storage.ConditionBuilder
	if rf, ok := ret.Get(0).(func(storage.Conjunction) storage.ConditionBuilder); ok {
		r0 = rf(conjunction)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(storage.ConditionBuilder)
		}
	}

	return r0
}

var _ storage.ConditionBuilder = (*ConditionBuilder)(nil)
